#!/bin/sh

# Define the dialog exit status codes
: ${DIALOG_OK=0}
: ${DIALOG_CANCEL=1}
: ${DIALOG_ESC=255}

# Define helper
prompt_confirm() {
  while true; do
    read -r -n 1 -p "${1:-Continue?} [y/N]: " REPLY
    case $REPLY in
      [yY]) printf "\nYour drive is now being wiped... \n"; 
		
        > log
		echo Time begin: $(date) > log
		# destructor goes here
        (dd if=/dev/urandom of=/dev/sda bs=1M && echo "Time end:  $(date)" >> log)&
        #(sleep 5 && echo "Time end:  $(date)" >> log)&
	    
        return 0 ;;
      [nN]) printf "\nAction aborted. \n"; return 1 ;;
      *) printf " \033[31m %s \n\033[0m" "invalid input"
    esac 
  done  
}

# Create a temporary file and make sure it goes away when we're done
tempfile=`tempfile 2>/dev/null` || tempfile=/tmp/test$$
trap "rm -f $tempfile" 0 1 2 5 15

# Generate dialog box
dialog --clear --title "Petrichor Utility" \
        --menu "Please enter your choice:" 20 51 4 \
        "Preloader"  "Setup for access" \
        "Destructor"  "Wipe entire PC" 2> $tempfile

# Get exit status
retval=$?

# Get user choice
choice=`cat $tempfile`

#Act on it
case $retval in
  $DIALOG_OK)
    case $choice in
      "Preloader")
        echo Processing setup...
	# Processes here
	hostname dvdrom
	echo Welcome > /etc/motd
	echo @ > /etc/issue
	tazpkg -gi openssh
	sed -i "/PermitEmptyPasswords/c\PermitEmptyPasswords yes" /etc/ssh/sshd_config
	sudo /etc/init.d/openssh start
	#(sleep 25 && sudo /etc/init.d/openssh restart)&
	pkill slim
	sudo /etc/init.d/openssh restart && pkill Xorg
	#read -p "waiting ten secs" -t 60
	;;
      "Destructor")
        echo Processing wipe...
	# Processes here
	printf " \033[31m %s \n\033[0m" "DANGEROUS Operation"
	# example usage of func
	prompt_confirm "Please confirm to continue" || exit 0
	
    esac
    ;;
    #echo "you picked $choice";;
  $DIALOG_CANCEL)
    echo "Cancel pressed.";;
  $DIALOG_ESC)
    echo "ESC pressed.";;
esac

